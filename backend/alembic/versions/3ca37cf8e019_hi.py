"""hi

Revision ID: 3ca37cf8e019
Revises: d8283d649aa0
Create Date: 2025-01-12 23:56:20.431733

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3ca37cf8e019'
down_revision: Union[str, None] = 'd8283d649aa0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subtitles')
    op.drop_table('playlists')
    op.drop_table('notifications')
    op.drop_table('users')
    op.drop_table('comments_like')
    op.drop_table('communities')
    op.drop_table('likes')
    op.drop_table('subscriptions')
    op.drop_table('user_log_info')
    op.drop_table('playlist_video')
    op.drop_table('saves')
    op.drop_table('channels')
    op.drop_table('comments')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('comments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('video_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], name='comments_parent_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='comments_user_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.unique_id'], name='comments_video_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('channels',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('channels_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('banner_img_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('profile_picture_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('video_watermark_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('unique_identifier', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('contact_email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='channels_owner_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='channels_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('saves',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('video_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='saves_user_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.unique_id'], name='saves_video_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='saves_pkey')
    )
    op.create_table('playlist_video',
    sa.Column('playlist_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('video_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], name='playlist_video_playlist_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.unique_id'], name='playlist_video_video_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('playlist_id', 'video_id', name='playlist_video_pkey')
    )
    op.create_table('user_log_info',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_log_info_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_log_info_pkey'),
    sa.UniqueConstraint('session_id', name='user_log_info_session_id_key'),
    sa.UniqueConstraint('user_id', name='user_log_info_user_id_key')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('channel_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('notification', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], name='subscriptions_channel_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='subscriptions_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='subscriptions_pkey')
    )
    op.create_table('likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('video_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('action_type', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='likes_user_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.unique_id'], name='likes_video_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='likes_pkey')
    )
    op.create_table('communities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('community_text', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('image_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=400), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='communities_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='communities_pkey')
    )
    op.create_table('videos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('videos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('video_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('file_url', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('thumbnail_name', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('thumbnail_url', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('audience', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('age_restriction', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('monetization', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('visibility', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('schedule_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='videos_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='videos_pkey'),
    sa.UniqueConstraint('unique_id', name='videos_unique_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('comments_like',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action_type', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], name='comments_like_comment_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='comments_like_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='comments_like_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=320), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=400), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('receiver_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('video_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('comment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('channel_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], name='notifications_receiver_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='notifications_sender_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.unique_id'], name='notifications_video_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_table('playlists',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('visibility', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='playlists_owner_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='playlists_pkey')
    )
    op.create_table('subtitles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('file_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('file_url', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('video_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['videos.unique_id'], name='subtitles_video_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='subtitles_pkey')
    )
    # ### end Alembic commands ###
